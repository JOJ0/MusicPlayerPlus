.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "BLISSIFY" "1" "August 6, 2022" "blissify 0.2.7" "User Manual"
.hy
.SH NAME
.PP
blissify = Analyze and make smart playlists from an MPD music database.
.SH SYNOPSIS
.PP
\f[B]blissify\f[R] [SUBCOMMAND] [FLAGS]
.SH DESCRIPTION
.PP
The \f[I]blissify\f[R] command can be used to create an MPD playlist of
songs based on similarity metrics computed and stored in a database.
.IP
.nf
\f[C]
USAGE:
    blissify [SUBCOMMAND]

FLAGS:
    -h, --help       Prints help information
    -V, --version    Prints version information

SUBCOMMANDS:
    help                    Prints this message or the help of the given subcommand(s)
    interactive-playlist    Make a playlist, prompting a set of close songs, and asking which one will be the most
                            appropriate.
    list-db                 Print songs that have been analyzed and are in blissify\[aq]s database.
    playlist                Erase the current playlist and make playlist of PLAYLIST_LENGTH from the currently
                            played song
    rescan                  (Re)scan completely an MPD library
    update                  Scan new songs that were added to the MPD library since last scan.
blissify-playlist 
Erase the current playlist and make playlist of PLAYLIST_LENGTH from the currently played song
\f[R]
.fi
.IP
.nf
\f[C]
USAGE:
    blissify playlist [FLAGS] [OPTIONS] <PLAYLIST_LENGTH>

FLAGS:
        --album-playlist       Make a playlist of similar albums from the current album.
        --deduplicate-songs    Deduplicate songs based both on the title / artist and theirsheer proximity.
    -h, --help                 Prints help information
        --seed-song            Instead of making a playlist of only the closest song to the current song,make a playlist
                               that queues the closest song to the first song, then
                                                   the closest to the second song, etc. Can take some time to build.
    -V, --version              Prints version information

OPTIONS:
        --distance <distance metric>    Choose the distance metric used to make the playlist. Default is
                                        \[aq]euclidean\[aq],other option is \[aq]cosine\[aq] [default: euclidean]

ARGS:
    <PLAYLIST_LENGTH>    Number of items to queue, including the first song.
blissify-interactive-playlist 
Make a playlist, prompting a set of close songs, and asking which one will be the most appropriate.
\f[R]
.fi
.IP
.nf
\f[C]
USAGE:
    blissify interactive-playlist [FLAGS] [OPTIONS]

FLAGS:
        --continue    Take the current playlist\[aq]s last song as a starting point, instead of removing the current
                      playlist and starting from the first song.
    -h, --help        Prints help information
    -V, --version     Prints version information

OPTIONS:
        --number-choices <choices>    Choose the number of proposed items you get each time. Defaults to 3, cannot be
                                      more than 9. [default: 3]
blissify-list-db 
Print songs that have been analyzed and are in blissify\[aq]s database.
\f[R]
.fi
.IP
.nf
\f[C]
USAGE:
    blissify list-db [FLAGS]

FLAGS:
        --detailed    Display analyzed song paths, as well as the corresponding analysis.
    -h, --help        Prints help information
    -V, --version     Prints version information
\f[R]
.fi
.SH AUTHORS
.PP
Blissify written by \[at]Polochon_street
.PP
MusicPlayerPlus integration of Blissify written by Ronald Record
<github@ronrecord.com>
.SH LICENSING
.PP
BLISSIFY is distributed under an Open Source license.
See the file LICENSE in the BLISSIFY source distribution for information
on terms & conditions for accessing and otherwise using BLISSIFY and for
a DISCLAIMER OF ALL WARRANTIES.
.SH BUGS
.PP
Submit bug reports online at:
.PP
<https://github.com/doctorfree/MusicPlayerPlus/issues>
.SH SEE ALSO
.PP
\f[B]beet\f[R](1), \f[B]mpplus\f[R](1)
.PP
Full documentation and sources at:
.PP
<https://github.com/doctorfree/MusicPlayerPlus>
