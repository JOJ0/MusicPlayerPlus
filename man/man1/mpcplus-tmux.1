.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "MPCPLUS-TMUX" "1" "March 26, 2022" "mpcplus-tmux 1.0.0" "User Manual"
.hy
.SH NAME
.PP
mpcplus-tmux - runs mpcplus, a visualizer, and displays album art in a
tmux session
.SH SYNOPSIS
.PP
\f[B]mpcplus-tmux\f[R] [-a] [-p script] [-r] [-u]
.PP
\f[B]NOTE:\f[R] \f[V]mpcplus-tmux\f[R] can be run by invoking
\f[V]mpplus [-a] [-p script] [-R]\f[R]
.SH DESCRIPTION
.PP
The \f[I]mpcplus-tmux\f[R] command opens several panes in a terminal
window, executing the mpcplus MPD client in one pane, a visualizer in
another pane, and displaying album cover art in another pane.
The album cover art automatically updates when another album is selected
in the MPD client pane.
The visualizer pane displays, by default, the cava spectrum visualizer.
Alternately, the visualizer pane can display a Python ASCIImatics
visualization.
.SH COMMAND LINE OPTIONS
.TP
\f[B]-a\f[R]
Indicates display album cover art
.TP
\f[B]-p script\f[R]
Specifies a python script to run in the visualizer pane.
Available scripts are \[dq]julia\[dq], \[dq]plasma\[dq], and
\[dq]rocks\[dq].
.TP
\f[B]-r\f[R]
Indicates record tmux session with asciinema (album cover art not
recorded)
.TP
\f[B]-u\f[R]
Displays this usage message and exits
.TP
\f[B]Defaults:\f[R]
cover art disabled, python art disabled, recording disabled
.SH EXAMPLES
.TP
\f[B]mpcplus-tmux\f[R]
Without options, \f[I]mpcplus-tmux\f[R] displays the mpcplus MPD client
and cava spectrum visualizer in a tmux session.
.TP
\f[B]mpcplus-tmux -a\f[R]
With the -a option, \f[I]mpcplus-tmux\f[R] displays the mpcplus MPD
client, cava spectrum visualizer, and album cover art in a tmux session.
.TP
\f[B]mpcplus-tmux -p plasma\f[R]
With the -p plasma option, \f[I]mpcplus-tmux\f[R] displays the mpcplus
MPD client and plasma ASCIImatics display in a tmux session.
.TP
\f[B]mpcplus-tmux -r\f[R]
With the -r option, \f[I]mpcplus-tmux\f[R] displays the mpcplus MPD
client and cava spectrum visualizer in a tmux session and records the
session using asciinema.
Recordings are stored in the user\[aq]s \f[V]$HOME/Videos/\f[R] folder.
.SH TMUX USAGE
.PP
start new:
.IP
.nf
\f[C]
tmux
\f[R]
.fi
.PP
start new with session name:
.IP
.nf
\f[C]
tmux new -s myname
\f[R]
.fi
.PP
attach:
.IP
.nf
\f[C]
tmux a  #  (or at, or attach)
\f[R]
.fi
.PP
attach to named:
.IP
.nf
\f[C]
tmux a -t myname
\f[R]
.fi
.PP
list sessions:
.IP
.nf
\f[C]
tmux ls
\f[R]
.fi
.PP
kill session:
.IP
.nf
\f[C]
tmux kill-session -t myname
\f[R]
.fi
.PP
Kill all the tmux sessions:
.IP
.nf
\f[C]
tmux ls | grep : | cut -d. -f1 | awk \[aq]{print substr($1, 0, length($1)-1)}\[aq] | xargs kill
\f[R]
.fi
.PP
In tmux, hit the prefix \f[V]ctrl+b\f[R] (my modified prefix is ctrl+a)
and then:
.SS List all shortcuts
.PP
to see all the shortcuts keys in tmux simply use the
\f[V]bind-key ?\f[R] in my case that would be \f[V]CTRL-B ?\f[R]
.SS Sessions
.IP
.nf
\f[C]
:new<CR>  new session
s  list sessions
$  name session
\f[R]
.fi
.SS Windows (tabs)
.IP
.nf
\f[C]
c  create window
w  list windows
n  next window
p  previous window
f  find window
,  name window
&  kill window
\f[R]
.fi
.SS Panes (splits)
.IP
.nf
\f[C]
%  vertical split
\[dq]  horizontal split

o  swap panes
q  show pane numbers
x  kill pane
+  break pane into window (e.g. to select text by mouse to copy)
-  restore pane from window
\[u237D]  space - toggle between layouts
<prefix> q (Show pane numbers, when the numbers show up type the key to goto that pane)
<prefix> { (Move the current pane left)
<prefix> } (Move the current pane right)
<prefix> z toggle pane zoom
\f[R]
.fi
.SS Sync Panes
.PP
You can do this by switching to the appropriate window, typing your Tmux
prefix (commonly Ctrl-B or Ctrl-A) and then a colon to bring up a Tmux
command line, and typing:
.IP
.nf
\f[C]
:setw synchronize-panes
\f[R]
.fi
.PP
You can optionally add on or off to specify which state you want;
otherwise the option is simply toggled.
This option is specific to one window, so it won\[cq]t change the way
your other sessions or windows operate.
When you\[cq]re done, toggle it off again by repeating the command.
tip source (http://blog.sanctum.geek.nz/sync-tmux-panes/)
.SS Resizing Panes
.PP
You can also resize panes if you don\[cq]t like the layout defaults.
I personally rarely need to do this, though it\[cq]s handy to know how.
Here is the basic syntax to resize panes:
.IP
.nf
\f[C]
PREFIX : resize-pane -D (Resizes the current pane down)
PREFIX : resize-pane -U (Resizes the current pane upward)
PREFIX : resize-pane -L (Resizes the current pane left)
PREFIX : resize-pane -R (Resizes the current pane right)
PREFIX : resize-pane -D 20 (Resizes the current pane down by 20 cells)
PREFIX : resize-pane -U 20 (Resizes the current pane upward by 20 cells)
PREFIX : resize-pane -L 20 (Resizes the current pane left by 20 cells)
PREFIX : resize-pane -R 20 (Resizes the current pane right by 20 cells)
PREFIX : resize-pane -t 2 20 (Resizes the pane with the id of 2 down by 20 cells)
PREFIX : resize-pane -t -L 20 (Resizes the pane with the id of 2 left by 20 cells)
\f[R]
.fi
.SS Copy mode:
.PP
Pressing \f[V]PREFIX [\f[R] places us in Copy mode.
We can then use our movement keys to move our cursor around the screen.
By default, the arrow keys work.
we set our configuration file to use Vim keys for moving between windows
and resizing panes so we wouldn\[cq]t have to take our hands off the
home row.
tmux has a vi mode for working with the buffer as well.
To enable it, add this line to .tmux.conf:
.IP
.nf
\f[C]
setw -g mode-keys vi
\f[R]
.fi
.PP
With this option set, we can use h, j, k, and l to move around our
buffer.
.PP
To get out of Copy mode, we just press the ENTER key.
Moving around one character at a time isn\[cq]t very efficient.
Since we enabled vi mode, we can also use some other visible shortcuts
to move around the buffer.
.PP
For example, we can use \[dq]w\[dq] to jump to the next word and
\[dq]b\[dq] to jump back one word.
And we can use \[dq]f\[dq], followed by any character, to jump to that
character on the same line, and \[dq]F\[dq] to jump backwards on the
line.
.IP
.nf
\f[C]
   Function                vi             emacs
   Back to indentation     \[ha]              M-m
   Clear selection         Escape         C-g
   Copy selection          Enter          M-w
   Cursor down             j              Down
   Cursor left             h              Left
   Cursor right            l              Right
   Cursor to bottom line   L
   Cursor to middle line   M              M-r
   Cursor to top line      H              M-R
   Cursor up               k              Up
   Delete entire line      d              C-u
   Delete to end of line   D              C-k
   End of line             $              C-e
   Goto line               :              g
   Half page down          C-d            M-Down
   Half page up            C-u            M-Up
   Next page               C-f            Page down
   Next word               w              M-f
   Paste buffer            p              C-y
   Previous page           C-b            Page up
   Previous word           b              M-b
   Quit mode               q              Escape
   Scroll down             C-Down or J    C-Down
   Scroll up               C-Up or K      C-Up
   Search again            n              n
   Search backward         ?              C-r
   Search forward          /              C-s
   Start of line           0              C-a
   Start selection         Space          C-Space
   Transpose chars                        C-t
\f[R]
.fi
.SS Misc
.IP
.nf
\f[C]
d  detach
t  big clock
?  list shortcuts
:  prompt
\f[R]
.fi
.SS Configurations Options:
.IP
.nf
\f[C]
# Mouse support - set to on if you want to use the mouse
* setw -g mode-mouse off
* set -g mouse-select-pane off
* set -g mouse-resize-pane off
* set -g mouse-select-window off

# Set the default terminal mode to 256color mode
set -g default-terminal \[dq]screen-256color\[dq]

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# Center the window list
set -g status-justify centre

# Maximize and restore a pane
unbind Up bind Up new-window -d -n tmp \[rs]; swap-pane -s tmp.1 \[rs]; select-window -t tmp
unbind Down
bind Down last-window \[rs]; swap-pane -s tmp.1 \[rs]; kill-window -t tmp
\f[R]
.fi
.SS TMUX Cheat Sheet References
.IP \[bu] 2
<https://tmuxcheatsheet.com/>
.IP \[bu] 2
<https://gist.github.com/MohamedAlaa/2961058>
.SH AUTHORS
.PP
Written by Ronald Record <github@ronrecord.com>
.SH LICENSING
.PP
MPCPLUS-TMUX is distributed under an Open Source license.
See the file LICENSE in the MPCPLUS-TMUX source distribution for
information on terms & conditions for accessing and otherwise using
MPCPLUS-TMUX and for a DISCLAIMER OF ALL WARRANTIES.
.SH BUGS
.PP
Submit bug reports online at:
.PP
<https://github.com/doctorfree/MusicPlayerPlus/issues>
.SH SEE ALSO
.PP
\f[B]mpcplus\f[R](1), \f[B]mpcpluskeys\f[R](1)
.PP
Full documentation and sources at:
.PP
<https://github.com/doctorfree/MusicPlayerPlus>
