directory: ~/Music
library: ~/.config/beets/musiclibrary.db

# Uncomment if you wish to place secret paths/tokens/credentials in
# ~/.config/beets/secrets.yaml
#
#include:
#   - secrets.yaml

import:
    copy: yes
    move: yes
    write: yes
    incremental: yes
    incremental_skip_later: yes
    quiet: no
    quiet_fallback: asis
    resume: yes
    from_scratch: no
    default_action: apply
    detail: yes
    non_rec_action: ask
    # duplicate_action can be 'skip', 'keep', 'remove', 'merge' or 'ask'
    duplicate_action: skip
    group_albums: no
    autotag: yes
    bell: no
    log: ~/.config/beets/import.log

plugins:
    - acousticbrainz
    - albumtypes
    - bandcamp
#   - convert
    - describe
#   - discogs
    - duplicates
    - edit
    - extrafiles
    - fetchart
    - fromfilename
    - hook
    - importadded
    - info
    - lyrics
    - lastgenre
    - missing
    - mbsync
    - mpdstats
    - play
    - playlist
    - smartplaylist
    - mpdupdate
    - unimported
    - xtractor
    - yearfixer

acousticbrainz:
    auto: yes
    force: no

albumtypes:
    types:
        - ep: 'EP'
        - single: 'Single'
        - soundtrack: 'OST'
        - live: 'Live'
        - compilation: 'Anthology'
        - remix: 'Remix'
    ignore_va: compilation
    bracket: '[]'

bandcamp:
    include_digital_only_tracks: true
    search_max: 2
    art: no
    comments_separator: "\n---\n"
    exclude_extra_fields:
        - comments
    genre:
        capitalize: no
        maximum: 0
        always_include: []
        mode: progressive # classical, progressive or psychedelic

# Uncomment this and the convert plugin entry to enable format conversion
# of media in your Beets library with the 'beet convert' command
#
#convert:
#   dest: ~/Music/__Converted__
#   quiet: true
#   command: ffmpeg -i $source -y -vn -aq 2 $dest
#   extension: mp3

duplicates:
    album: yes
#   tiebreak:
#       items: [bitrate]

extrafiles:
    patterns:
        all: '*.*'

fetchart:
  # Enable automatic album art fetching during import.
  auto: no
  # Pick only trusted album art by ignoring filenames that do not contain
  # one of the keywords in "cover_names".
  cautious: no
  # Only allow images with 1:1 aspect ratio
  enforce_ratio: yes
  # Only images with a width bigger or equal to minwidth are considered as
  # valid album art candidates.
  minwidth: 1000
  # A maximum image width to downscale fetched images if they are too big.
  # The height is recomputed so that the aspect ratio is preserved.
  maxwidth: 3000
  # An asterisk * expands to all available sources.
  # Supported sources include:
  #  filesystem coverart itunes amazon albumart wikipedia google fanarttv lastfm
  # No remote art sources are queried if local art is found in the filesystem.
  sources:
    - filesystem
    - coverart
    - albumart
#   - lastfm
    - wikipedia
  # API key to use for the fanart API.
# lastfm_key: REDACTED
  # Store the art source (e.g. filesystem) in the beets database as art_source.
  store_source: yes

mpdstats:
    host: localhost
    port: 6600
    rating: yes
    rating_mix: 0.75

lastgenre:
    # Fetch genres automatically during import. Default: yes.
    auto: yes
    #
    # Use a canonicalization tree. Setting this to yes will use a built-in tree.
    # You can also set it to a path, like the whitelist config value,
    # to use your own tree. Default: no (disabled).
    #canonical: no
    # Use a local copy of the built-in tree
    canonical: ~/.config/beets/genres/genres-tree.yaml 
    #
    # Number of genres to fetch. Default: 1
    count: 1
    #
    # A string if to use a fallback genre when no genre is found.
    # You can use the empty string '' to reset the genre. Default: None.
    fallback: Unknown
    #
    # By default, beets will always fetch new genres, even if the files already
    # have one. To instead leave genres in place in when they pass the whitelist,
    # set the force option to no. Default: yes.
    # NOTE: May not be working as expected. Perhaps fixed in 1.6.1 Investigating
    # force: yes
    #
    # Minimum popularity factor below which genres are discarded.
    # Default: 10.
    min_weight: 10
    #
    # Sort genres by the most to least specific, rather than most to least
    # popular. Default: no.
    # Setting this to yes may produce an interesting set of genres.
    # To experiment, view genres set during import with 'beet describe genre'
    # then change this to 'no' and run 'beet lastgenre'. View the updated
    # genre tags with 'beet describe genre'. If you prefer to go back to using
    # more specific genre tags rather than popular, set this back to 'yes' and
    # re-run 'beet lastgenre'.
    prefer_specific: yes
    #
    # Which entity to look up in Last.fm. Can be either artist, album or track.
    # Default: album.
    source: track
    #
    # A separator for multiple genres. Default: ', '.
    separator: ', '
    #
    # The filename of a custom genre list, yes to use the internal whitelist,
    # or no to consider all genres valid. Default: yes.
    #whitelist: yes
    # Use a local copy of the internal whitelist
    whitelist: ~/.config/beets/genres/genres.txt
    #
    # Convert the new tags to TitleCase before saving. Default: yes.
    title_case: yes

lyrics:
    # Fetch lyrics automatically during import. Default: yes.
    # No lyrics are fetched during import. Run 'mpplus -L` after import.
    auto: no
    # List of sources to search for lyrics. An asterisk * expands to all
    # available sources. Default: google musixmatch genius tekstowo
    # Currently it appears MusixMatch and Genius are blocking Beets.
    # Google requires an API key - use that if you have one.
    # The only free no-setup-required service is the Polish one but
    # they have changed their website so Beets lyrics scraping adds
    # some untranslated Polish at the beginning and end of the lyrics.
    # For now, we use the Polish service as default lyrics source.
    # Users may wish to go through the trouble of activating Google.
    sources: tekstowo
    #
    # Your Bing Translation application password (to Activate On-the-Fly Translation)
    # bing_client_secret:
    #
    # By default all lyrics with a language other than bing_lang_to are translated.
    # Use a list of lang codes to restrict the set of source languages to translate.
    # Default: []
    # bing_lang_from: [ en ]
    #
    # Language to translate lyrics into. Default: None.
    # bing_lang_to: en
    #
    # By default, the file will be left unchanged when no lyrics are found.
    # Use the empty string '' to reset the lyrics in such a case. Default: None.
    # fallback:
    #
    # By default, beets won’t fetch lyrics if the files already have ones.
    # To instead always fetch lyrics, set the force option to yes. Default: no.
    # force: yes
    #
    # Your Google API key (to enable the Google Custom Search backend). Default: None.
    # google_API_key:
    #
    # The custom search engine to use. Default: The beets custom search engine
    # google_engine_ID:

play:
    # The command used to open the playlist. Default: xdg-open
    # Insert $args to use the --args feature.
    #command: mpv $args --playlist
    command: mpc --quiet $args load 
    # If set, emit paths relative to this directory. Default: None.
    #relative_to: ~/Music
    # When using the -a option, the m3u will contain the paths to each track on
    # the matched albums. Enable this option to store paths to folders instead.
    # Default: no.
    #use_folders: no
    # Instead of creating a temporary m3u playlist and then opening it, simply
    # call the command with the paths returned by the query as arguments.
    # Default: no.
    raw: yes
    #  Set the minimum number of files to play which will trigger a warning to
    # be emitted. If set to no, warning are never issued. Default: 100.
    #warning_threshold: 100
    # Set whether or not a UTF-8 Byte Order Mark should be emitted into the m3u
    # file. If you’re using foobar2000 or Winamp, this is needed. Default: no.
    #bom: no

playlist:
  auto: yes
  playlist_dir: ~/.config/mpd/playlists
  relative_to: ~/Music

smartplaylist:
    relative_to: ~/Music
    playlist_dir: ~/.config/mpd/playlists
    forward_slash: no
    playlists:
        - name: 'rating.m3u'
          query: 'rating:0.4..1.0'

#       - name: 'not_played.m3u'
#         query: '-play_count: artist:'

#       - name: beatles.m3u
#         query: 'artist:Beatles'

        - name: 'ween.m3u'
          query: 'artist:Ween'

        - name: 1940s.m3u
          query: 'original_year:1940..1949'

        - name: 1950s.m3u
          query: 'original_year:1950..1959'

        - name: 1960s.m3u
          query: 'original_year:1960..1969'

        - name: 1970s.m3u
          query: 'original_year:1970..1979'

        - name: 1980s.m3u
          query: 'original_year:1980..1989'

        - name: 1990s.m3u
          query: 'original_year:1990..1999'

        - name: 2000s.m3u
          query: 'original_year:2000..2009'

        - name: 2010s.m3u
          query: 'original_year:2010..2019'

        - name: 2020s.m3u
          query: 'original_year:2020..2029'

        - name: 'ReleasedIn$original_year.m3u'
          query: 'original_year::195(0|1|2|3|4|5|6|7|8|9)'

        - name: 'ReleasedIn$original_year.m3u'
          query: 'original_year::196(0|1|2|3|4|5|6|7|8|9)'

        - name: 'ReleasedIn$original_year.m3u'
          query: 'original_year::197(0|1|2|3|4|5|6|7|8|9)'

        - name: 'ReleasedIn$original_year.m3u'
          query: 'original_year::198(0|1|2|3|4|5|6|7|8|9)'

        - name: 'ReleasedIn$original_year.m3u'
          query: 'original_year::199(0|1|2|3|4|5|6|7|8|9)'

        - name: 'ReleasedIn$original_year.m3u'
          query: 'original_year::200(0|1|2|3|4|5|6|7|8|9)'

        - name: 'ReleasedIn$original_year.m3u'
          query: 'original_year::201(0|1|2|3|4|5|6|7|8|9)'

        - name: 'ReleasedIn$original_year.m3u'
          query: 'original_year::202(0|1|2)'

mpd:
    host: localhost
    port: 6600
    rating: yes
    rating_mix: 0.75

# Uncomment this and the discogs plugin entry to enable Discogs metadata source
#
#discogs:
#   source_weight: 0.0
#   index_tracks: yes
#   user_token: Your_Discogs_User_Token

musicbrainz:
    # Default: 5
    # Higher: better for albums with many releases in many formats/countries
    # Lower: better for box sets
    #searchlimit: 10
    extra_tags: [year, catalognum, country, media, label]
    #genres: yes
#   Disable Musicbrainz: not in Beets 1.6.0, will be in 1.6.1
#   enabled: no

match:
    #strong_rec_thresh: 0.10
    #medium_rec_thresh: 0.25
    strong_rec_thresh: 0.075
    medium_rec_thresh: 0.125
    max_rec:
      unmatched_tracks: low
      missing_tracks: strong
    # The higher the weight, the lower the items go in the candidate list (greater
    # distance) when this penalty is applied.
    distance_weights:
      # Default: 3.0
      album: 6.0
      # Default: 3.0
      artist: 7.0
      # Default: 2.0
      totaltracks: 4.0
      # Default: 0.9
      missing_tracks: 1.0
      # Default: 0.6
      unmatched_tracks: 10.0
    #preferred:
    #    media: ['CD', 'Digital Media|File', 'Digital Media']
    #    countries: ['US', 'GB|UK']    
    preferred:
      countries: ['US', 'XW', 'GB|UK']
      media: ['Digital Media|File', 'CD']
    ignored_media:
      ['DVD', 'DVD-Video', 'Blu-ray', 'HD-DVD', 'VCD', 'SVCD', 'UMD', 'VHS']

paths:
    # Default paths configuration
    # default: $albumartist/$album%aunique{}/$track $title
    # singleton: Non-Album/$artist/$title
    # comp: Compilations/$album%aunique{}/$track $title
    default: "%if{$albumartist,%title{$albumartist},%if{$artist,%title{$artist},Unknown Artist}}/%if{$album,$album%aunique{},Unknown Album}%if{$atypes, $atypes}/$track - $title"
    singleton: "%if{$albumartist,%title{$albumartist},%if{$artist,%title{$artist},Unknown Artist}}/%if{$album,$album%aunique{},Unknown Album}%if{$atypes, $atypes}/$track - $title"
    comp: Compilations/%if{$album,$album%aunique{},Unknown Album}%if{$atypes, $atypes}/$track - $artist - $title
    albumtype:soundtrack: Soundtracks/%if{$album,$album%aunique{},Unknown Album}%if{$atypes, $atypes}/$track - $title

importadded:
    preserve_mtimes: yes
    preserve_write_mtimes: yes

threaded: yes

unimported:
    ignore_extensions: jpg png
    ignore_subdirectories: data tmp

xtractor:
    # auto not implemented yet, run xtractor manually after import
    auto: no
    dry-run: no
    write: yes
    threads: 1
    force: no
    quiet: no
    keep_output: yes
    keep_profiles: no
    output_path: ~/.config/beets/xtraction_data
    essentia_extractor: /usr/bin/essentia_streaming_extractor_music
    extractor_profile:
        outputFormat: json
        outputFrames: 0
        lowlevel:
            frameSize: 2048
            hopSize: 1024
        chromaprint:
            compute: 1
            duration: 20.0
        highlevel:
            compute: 1
            svm_models:
                - /usr/share/musicplayerplus/svm_models/danceability.history
                - /usr/share/musicplayerplus/svm_models/gender.history
                - /usr/share/musicplayerplus/svm_models/genre_dortmund.history
                - /usr/share/musicplayerplus/svm_models/genre_electronic.history
                - /usr/share/musicplayerplus/svm_models/genre_rosamerica.history
                - /usr/share/musicplayerplus/svm_models/genre_tzanetakis.history
                - /usr/share/musicplayerplus/svm_models/ismir04_rhythm.history
                - /usr/share/musicplayerplus/svm_models/mood_acoustic.history
                - /usr/share/musicplayerplus/svm_models/mood_aggressive.history
                - /usr/share/musicplayerplus/svm_models/mood_electronic.history
                - /usr/share/musicplayerplus/svm_models/mood_happy.history
                - /usr/share/musicplayerplus/svm_models/mood_party.history
                - /usr/share/musicplayerplus/svm_models/mood_relaxed.history
                - /usr/share/musicplayerplus/svm_models/mood_sad.history
                - /usr/share/musicplayerplus/svm_models/moods_mirex.history
                - /usr/share/musicplayerplus/svm_models/timbre.history
                - /usr/share/musicplayerplus/svm_models/tonal_atonal.history
                - /usr/share/musicplayerplus/svm_models/voice_instrumental.history
# xtractor configuration defaults:
#   low_level_targets:
#       bpm:
#           path: "rhythm.bpm"
#           type: integer
#           required: yes
#       danceability:
#           path: "rhythm.danceability"
#           type: float
#       beats_count:
#           path: "rhythm.beats_count"
#           type: integer
#       average_loudness:
#           path: "lowlevel.average_loudness"
#           type: float
#           required: yes
#   high_level_targets:
#       danceable:
#           path: "highlevel.danceability.all.danceable"
#           type: float
#           required: yes
#       gender:
#           path: "highlevel.gender.value"
#           type: string
#           required: yes
#       is_male:
#           path: "highlevel.gender.all.male"
#           type: float
#       is_female:
#           path: "highlevel.gender.all.female"
#           type: float
#       genre_rosamerica:
#           path: "highlevel.genre_rosamerica.value"
#           type: string
#           required: yes
#       voice_instrumental:
#           path: "highlevel.voice_instrumental.value"
#           type: string
#           required: yes
#       is_voice:
#           path: "highlevel.voice_instrumental.all.voice"
#           type: float
#       is_instrumental:
#           path: "highlevel.voice_instrumental.all.instrumental"
#           type: float
#       mood_acoustic:
#           path: "highlevel.mood_acoustic.all.acoustic"
#           type: float
#           required: yes
#       mood_aggressive:
#           path: "highlevel.mood_aggressive.all.aggressive"
#           type: float
#           required: yes
#       mood_electronic:
#           path: "highlevel.mood_electronic.all.electronic"
#           type: float
#           required: yes
#       mood_happy:
#           path: "highlevel.mood_happy.all.happy"
#           type: float
#           required: yes
#       mood_sad:
#           path: "highlevel.mood_sad.all.sad"
#           type: float
#           required: yes
#       mood_party:
#           path: "highlevel.mood_party.all.party"
#           type: float
#           required: yes
#       mood_relaxed:
#           path: "highlevel.mood_relaxed.all.relaxed"
#           type: float
#           required: yes
#       mood_mirex:
#           path: "highlevel.moods_mirex.value"
#           type: string
#           required: yes
#       mood_mirex_cluster_1:
#           path: "highlevel.moods_mirex.all.Cluster1"
#           type: float
#       mood_mirex_cluster_2:
#           path: "highlevel.moods_mirex.all.Cluster2"
#           type: float
#       mood_mirex_cluster_3:
#           path: "highlevel.moods_mirex.all.Cluster3"
#           type: float
#       mood_mirex_cluster_4:
#           path: "highlevel.moods_mirex.all.Cluster4"
#           type: float
#       mood_mirex_cluster_5:
#           path: "highlevel.moods_mirex.all.Cluster5"
#           type: float

yearfixer:
    force: yes

ui:
    color: yes
    colors:
        text_success: green
        text_warning: yellow
        text_error: red
        text_highlight: red
        text_highlight_minor: lightgray
        action_default: turquoise
        action: blue

hook:
    hooks:
        - event: import_begin
          command: /usr/share/musicplayerplus/scripts/beet_log.sh Import begin
        - event: import
          command: /usr/share/musicplayerplus/scripts/beet_log.sh Import end

