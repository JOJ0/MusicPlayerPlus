#!/bin/bash

if [ -f ${HOME}/.config/mpcplus/config ]
then
  MPCDIR=".config/mpcplus"
else
  if [ -f ${HOME}/.mpcplus/config ]
  then
    MPCDIR=".mpcplus"
  else
    mpcinit
    MPCDIR=".config/mpcplus"
  fi
fi

usage() {
  printf "\nUsage: mpcplus-tmux [-a] [-p script] [-r] [-x width] [-y height] [-u]"
  printf "\nWhere:"
  printf "\n\t-a indicates display album cover art"
  printf "\n\t-p script specifies a python script to run in the visualizer pane"
  printf "\n\t-r indicates record tmux session with asciinema"
  printf "\n\t-x width specifies the width of the spectrum visualizer"
  printf "\n\t-y height specifies the height of the spectrum visualizer"
  printf "\n\t-u displays this usage message and exits\n"
  printf "\nDefaults: width=256 height=9, cover art disabled, python art disabled, recording disabled"
  printf "\nThis run:\n\twidth=${WIDTH} height=${HEIGHT}"
  if [ "${ART}" ]
  then
    printf "\n\tcover art enabled"
  else
    printf "\n\tcover art disabled"
  fi
  if [ "${PYART}" ]
  then
    printf "\n\tpython art enabled"
  else
    printf "\n\tpython art disabled"
  fi
  if [ "${RECORD}" ]
  then
    printf "\n\trecording enabled"
  else
    printf "\n\trecording disabled"
  fi
  printf "\n"
  exit 1
}

ART=
PYART=
RECORD=
WIDTH=256
HEIGHT=9
USAGE=
while getopts "ap:rx:y:u" flag; do
    case $flag in
        a)
          have_uebz=`type -p ueberzug`
          [ "${have_uebz}" ] && ART=1
          ;;
        p)
          PYART=${OPTARG}
          ;;
        r)
          have_nema=`type -p asciinema`
          [ "${have_nema}" ] && RECORD=1
          ;;
        x)
          WIDTH=${OPTARG}
          ;;
        y)
          HEIGHT=${OPTARG}
          ;;
        u)
          USAGE=1
          ;;
    esac
done
shift $(( OPTIND - 1 ))

# If both ART and PYART have been specified, disable ART and use PYART
# [ "${ART}" ] && [ "${PYART}" ] && ART=

[ "${ART}" ] && {
  [ ${HEIGHT} -lt 9 ] && HEIGHT=9
}
[ "${PYART}" ] && {
  [ ${HEIGHT} -lt 12 ] && HEIGHT=12
}

[ "${USAGE}" ] && usage

COVER="${HOME}/${MPCDIR}/album_cover.png"
[ -f ${COVER} ] || cp ${HOME}/${MPCDIR}/default_cover.png ${COVER}

tmux new-session -d -x 256 -y 128 -s musicplayerplus
tmux set -g status off

tmux send-keys "stty -echo" C-m
tmux send-keys "tput civis -- invisible" C-m
tmux send-keys "export PS1=''" C-m
tmux send-keys "clear" C-m
[ "${ART}" ] && tmux send-keys "${HOME}/${MPCDIR}/album_cover.sh " C-m

tmux split-window -v
tmux select-pane -t 1
tmux send-keys "mpcplus --config='${HOME}/${MPCDIR}/catalog.conf'" C-m
tmux send-keys 1

tmux select-pane -t 0
[ "${ART}" ] && tmux split-window -h
if [ "${PYART}" ]
then
  tmux send-keys "python ${HOME}/${MPCDIR}/${PYART}.py" C-m
else
  tmux send-keys "cava -p ${HOME}/${MPCDIR}/config-cava" C-m
fi

tmux resize-pane -t 0 -x ${WIDTH} -y ${HEIGHT}
[ "${ART}" ] && tmux resize-pane -t 1 -y ${HEIGHT}

tmux set-hook client-resized "resize-pane -t 0 -x ${WIDTH} -y ${HEIGHT}"

if [ "${ART}" ]
then
  tmux select-pane -t 2
else
  tmux select-pane -t 1
fi

if [ "${RECORD}" ]
then
  tmux d
  REC_DIR=$HOME/Videos
  [ -d ${REC_DIR} ] || mkdir ${REC_DIR}
  echo "Recording this mpcava session with asciinema"
  asciinema rec --command "tmux attach -t musicplayerplus" ${REC_DIR}/tmux-$(date +%F--%H%M).asciicast
else
  tmux a #
fi
