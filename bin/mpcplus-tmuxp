#!/bin/bash
#
# mpcplus-tmuxp - run the mpcplus MPD client, spectrum visualizer using tmuxp

export SESSION=musicplayerplus

if [ -f ${HOME}/.config/mpcplus/config ]
then
  MPCDIR=".config/mpcplus"
else
  if [ -f ${HOME}/.mpcplus/config ]
  then
    MPCDIR=".mpcplus"
  else
    mpcinit
    MPCDIR=".config/mpcplus"
  fi
fi

usage() {
  printf "\nUsage: mpcplus-tmuxp [-p script] [-r] [-u]"
  printf "\nWhere:"
  printf "\n\t-p script specifies an asciimatics script to run"
  printf " in the visualizer pane"
  printf "\n\t-r indicates record tmux session with asciinema"
  printf "\n\t-u displays this usage message and exits\n"
  printf "\nDefaults: cover art disabled, ascii art disabled, recording disabled"
  printf "\nThis run:"
  if [ "${PYART}" ]
  then
    printf "\n\tascii art enabled"
  else
    printf "\n\tascii art disabled"
  fi
  if [ "${RECORD}" ]
  then
    printf "\n\trecording enabled"
  else
    printf "\n\trecording disabled"
  fi
  printf "\nType 'man mpcplus-tmuxp' for detailed usage info on mpcplus-tmuxp"
  printf "\nType 'man mpcplus' for detailed usage info on the mpcplus MPD client\n"
  exit 1
}

PYART=
RECORD=
USAGE=
while getopts "p:ru" flag; do
    case $flag in
        p)
          PYART=${OPTARG}
          ;;
        r)
          have_nema=`type -p asciinema`
          [ "${have_nema}" ] && RECORD=1
          ;;
        u)
          USAGE=1
          ;;
    esac
done
shift $(( OPTIND - 1 ))

[ "${USAGE}" ] && usage

if [ "${PYART}" ]
then
  have_pyart=`type -p mpp${PYART}`
  [ "${have_pyart}" ] && export VIZCOMM="mpp${PYART}"
else
  export VIZCOMM="mppcava -p ${HOME}/${MPCDIR}/cava-tmux.conf"
fi

tmuxp load mpcplus-tmux

if [ "${RECORD}" ]
then
  tmux d
  VID_DIR=$HOME/Videos
  [ -d ${VID_DIR} ] || mkdir ${VID_DIR}
  REC_DIR=${VID_DIR}/asciinema
  [ -d ${REC_DIR} ] || mkdir ${REC_DIR}
  echo "Recording this ${SESSION} session with asciinema"
  asciinema rec --command "tmux attach -t ${SESSION}" ${REC_DIR}/${SESSION}-$(date +%F--%H%M).cast
else
  tmux a #
fi
